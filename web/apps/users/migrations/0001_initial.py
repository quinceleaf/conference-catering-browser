# Generated by Django 3.2 on 2021-04-18 19:14

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_validated', models.BooleanField(default=True, help_text="Designates whether this user's email has been validated.", verbose_name='validated')),
                ('first_name', models.CharField(blank=True, max_length=40, null=True)),
                ('last_name', models.CharField(blank=True, max_length=80, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=48)),
                ('name_full', models.CharField(max_length=48)),
                ('address', models.TextField(blank=True, default='')),
                ('delivery_window_buffer', models.PositiveSmallIntegerField(blank=True, default=5)),
                ('delivery_window_size', models.PositiveSmallIntegerField(blank=True, default=15)),
                ('delivery_capacity', models.PositiveSmallIntegerField(blank=True, default=10)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('floor', models.CharField(default='1', max_length=10)),
                ('name', models.CharField(blank=True, default='', max_length=48)),
                ('flag_common_area', models.BooleanField(default=False)),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='users.building')),
            ],
            options={
                'ordering': ['building__name', 'floor'],
            },
        ),
        migrations.CreateModel(
            name='InterfaceGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(blank=True, max_length=36, null=True)),
                ('template_string', models.CharField(blank=True, max_length=24, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('formal_name', models.CharField(blank=True, default='', max_length=64, verbose_name='Formal Name')),
                ('flag_building_management', models.BooleanField(default=False)),
                ('contact_telephone_reception', models.CharField(blank=True, default='', max_length=32)),
                ('building_default', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='users.building')),
                ('buildings', models.ManyToManyField(blank=True, related_name='tenants', to='users.Building')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(blank=True, max_length=36, null=True)),
                ('template_string', models.CharField(blank=True, max_length=24, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TenantGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=48, verbose_name='Name')),
                ('tenants', models.ManyToManyField(blank=True, related_name='groups', to='users.Tenant')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('user_type', models.CharField(choices=[('Tenant User', 'Tenant User'), ('Tenant Manager', 'Tenant Manager'), ('Tenant Viewer', 'Tenant Viewer'), ('Building Viewer', 'Building Viewer'), ('GP Manager', 'GP Manager')], default='Tenant User', max_length=24)),
                ('avatar', models.ImageField(blank=True, default='../static/img/avatars/default-user-avatar.png', null=True, upload_to='avatars')),
                ('unit', models.CharField(blank=True, default='', max_length=30)),
                ('contact_telephone_office', models.CharField(blank=True, default='', max_length=32)),
                ('contact_telephone_mobile', models.CharField(blank=True, default='', max_length=32)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('flag_use_default_location', models.BooleanField(default=False)),
                ('floor_default', models.CharField(blank=True, max_length=30, null=True)),
                ('room_default', models.CharField(blank=True, max_length=30, null=True)),
                ('flag_email_on_order_creation', models.BooleanField(default=False)),
                ('flag_email_on_order_cancellation', models.BooleanField(default=False)),
                ('flag_email_on_order_updates', models.BooleanField(default=False)),
                ('flag_email_on_service_notices', models.BooleanField(default=False)),
                ('flag_waiting_validation', models.BooleanField(default=False)),
                ('flag_helpful_popovers', models.BooleanField(default=True)),
                ('flag_skipped_tour1', models.BooleanField(default=False)),
                ('flag_skipped_tour2', models.BooleanField(default=False)),
                ('date_last_offered_tour', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc), verbose_name='Last Offered Tour')),
                ('highest_tour_step_completed', models.PositiveSmallIntegerField(default=0)),
                ('building_default', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='users.building')),
                ('group_permissions', models.ManyToManyField(blank=True, null=True, related_name='users', to='users.UserGroup')),
                ('interface_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='users.interfacegroup')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='users.tenant')),
                ('tenant_groups_managed', models.ManyToManyField(blank=True, related_name='gp_staff', to='users.TenantGroup')),
                ('tenants_managed', models.ManyToManyField(blank=True, related_name='gp_staff', to='users.Tenant')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, default='', max_length=48, null=True)),
                ('number', models.CharField(blank=True, default='', max_length=12, null=True)),
                ('room_type', models.CharField(blank=True, default='', max_length=28, null=True)),
                ('room_style', models.CharField(blank=True, default='', max_length=28, null=True)),
                ('capacity_seats', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('capacity_max', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('flag_catering_allowed', models.BooleanField(default=True)),
                ('floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='users.floor')),
            ],
            options={
                'ordering': ['floor__building__name', 'floor', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Elevator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=48)),
                ('floors', models.CharField(max_length=48)),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='elevators', to='users.building')),
            ],
            options={
                'ordering': ['sort_order', 'name'],
            },
        ),
    ]
