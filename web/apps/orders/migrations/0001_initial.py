# Generated by Django 3.2 on 2021-04-18 19:14

import apps.orders.models
import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
from django.utils.timezone import utc
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddOn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(default='', max_length=32, verbose_name='Name')),
                ('note', models.CharField(blank=True, default='', max_length=128, verbose_name='Note')),
                ('flag_site_specific', models.BooleanField(default=False)),
                ('flag_customer_selectable', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='AddOnPrice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('variation', models.CharField(blank=True, default='', max_length=60, verbose_name='Variation')),
                ('price_descriptive', models.CharField(blank=True, default='', max_length=128, verbose_name='Descriptive Price')),
                ('price_numeric', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12)),
                ('price_numeric_fixed', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12)),
            ],
            options={
                'ordering': ['addon__name'],
            },
        ),
        migrations.CreateModel(
            name='BillingRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('event_date', models.DateField(default=datetime.date(2010, 1, 1), help_text='Order Date')),
                ('payment_reference', models.CharField(blank=True, max_length=96)),
                ('payment_note', models.CharField(blank=True, max_length=96)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Total Cost', max_digits=12)),
                ('food_internal', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Food (Internal)', max_digits=12)),
                ('food_external', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Food (External)', max_digits=12)),
                ('alcohol_beverages', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Alcohol/Beverages', max_digits=12)),
                ('labor', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Labor', max_digits=12)),
                ('rentals', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Rentals', max_digits=12)),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date Created', verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, help_text='Date Last Updated', verbose_name='Updated')),
                ('date_billed', models.DateTimeField(blank=True, help_text='Date Billed to Client', null=True, verbose_name='Billed')),
                ('pdf_as_of_record', models.FileField(blank=True, null=True, upload_to='billing_pdfs/', verbose_name='PDF at time of record')),
            ],
            options={
                'ordering': ['event_date', 'order__invoice_number'],
            },
            managers=[
                ('frames', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=24)),
                ('description', models.CharField(blank=True, default='', max_length=255)),
                ('calendar_type', models.CharField(choices=[('Google', 'Google'), ('Outlook', 'Outlook')], default='Pending', max_length=32, verbose_name='Calendar Type')),
                ('calendar_id', models.CharField(blank=True, default='', max_length=64)),
                ('flag_single_tenant_only', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=32, verbose_name='Category')),
                ('note', models.CharField(blank=True, default='', max_length=128, verbose_name='Note')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='ClosedDay',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('reason', models.CharField(max_length=255, verbose_name='Reason')),
                ('date_closed', models.DateField(default=datetime.date(2010, 1, 1), help_text='Date Closed', verbose_name='Closed')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date Created', verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, help_text='Date Last Updated', verbose_name='Updated')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='CostType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=32, verbose_name='Cost Type')),
                ('note', models.CharField(blank=True, default='', max_length=128, verbose_name='Note')),
            ],
            options={
                'verbose_name_plural': 'Cost Types',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('cxp_id', models.CharField(blank=True, max_length=12, verbose_name='CXP ID')),
                ('name', models.CharField(max_length=64, verbose_name='Course')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='Description')),
                ('note', models.CharField(blank=True, default='', max_length=255, verbose_name='Note')),
                ('variation', models.CharField(blank=True, default='', max_length=30, verbose_name='Variation')),
                ('price_descriptive', models.CharField(blank=True, default='', max_length=128, verbose_name='Descriptive Price')),
                ('price_numeric_fixed', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12)),
                ('price_numeric_per_person', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12)),
                ('selection_quantity', models.PositiveSmallIntegerField(default=0, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='CourseModificationOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='Description')),
                ('variation', models.CharField(blank=True, default='', max_length=30, verbose_name='Variation')),
                ('price_descriptive', models.CharField(blank=True, default='', max_length=128, verbose_name='Descriptive Price')),
                ('price_numeric_per_person', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalSettings',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('flag_tenant_workflow', models.BooleanField(default=False)),
                ('site_title', models.CharField(blank=True, default='Catering Services', max_length=32)),
                ('flag_sameday_ordering', models.BooleanField(default=False, help_text='Allowed to Order Same-Day?')),
                ('sameday_ordering_leadtime', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Same-Day Lead-time (hours)')),
                ('gp_contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('menu_pricing', models.CharField(choices=[('Default', 'Default'), ('Tenant-specific', 'Tenant-specific')], default='Default', max_length=16)),
                ('addon_staff_labor_captain_charge', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('addon_staff_labor_charge', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('addon_after_hours_scheduled_event_charge', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('addon_after_hours_event_breakdown_charge', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('addon_small_order_charge', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('lead_time_by_guest_count_threshold', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Guest Count to trigger lead time')),
                ('lead_time_by_guest_count_value', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Lead Time constraint (hours)')),
                ('minimum_guest_counts_descriptive', models.TextField(blank=True, null=True)),
                ('lead_times_descriptive', models.TextField(blank=True, null=True)),
                ('flag_defined_locations', models.BooleanField(default=False)),
                ('use_common_floors', models.BooleanField(default=True)),
                ('schedule_descriptive', models.CharField(blank=True, max_length=255, null=True)),
                ('allow_sunday', models.BooleanField(default=False)),
                ('allow_monday', models.BooleanField(default=True)),
                ('allow_tuesday', models.BooleanField(default=True)),
                ('allow_wednesday', models.BooleanField(default=True)),
                ('allow_thursday', models.BooleanField(default=True)),
                ('allow_friday', models.BooleanField(default=True)),
                ('allow_saturday', models.BooleanField(default=False)),
                ('allow_everyday', models.BooleanField(default=False)),
                ('timeline_start', models.TimeField(default=datetime.time(8, 0))),
                ('timeline_end', models.TimeField(default=datetime.time(17, 0))),
                ('is_building_required', models.BooleanField(default=False)),
                ('choice_location_deliver_to_reception', models.CharField(choices=[('User Directs Deliveries', 'User Directs Deliveries'), ('All Deliveries Redirected', 'All Deliveries Redirected')], default='User Directs Deliveries', max_length=32)),
                ('date_last_updated_choice_location_deliver_to_reception', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('value_location_deliver_to_reception', models.CharField(blank=True, default='', max_length=255)),
                ('date_last_updated_value_location_deliver_to_reception', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('choice_location_restrict_locations', models.CharField(choices=[('User Enters Destinations', 'User Enters Destinations'), ('Limited to Listed Destinations', 'Limited to Listed Destinations')], default='User Enters Destinations', max_length=32)),
                ('date_last_updated_choice_location_restrict_locations', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('value_location_restrict_locations', models.TextField(blank=True, null=True)),
                ('date_last_updated_value_location_restrict_locations', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('choice_user_signup_method', models.CharField(choices=[('Tenant Distributes Signup URL', 'Tenant Distributes Signup URL')], default="'Tenant Distributes Signup URL'", max_length=32)),
                ('date_last_updated_user_signup_method', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('choice_approve_direct_signup', models.CharField(choices=[('Tenant Must Approve', 'Tenant Must Approve'), ('Allow with Valid Email', 'Allow with Valid Email')], default='Tenant Must Approve', max_length=24, null=True)),
                ('date_last_updated_approve_direct_signup', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('value_user_email_validation', models.CharField(blank=True, default='', max_length=48, verbose_name='Email format')),
                ('date_last_updated_user_email_validation', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('tenant_has_house_account', models.BooleanField(default=True)),
                ('tenant_specific_billing_options', models.BooleanField(default=False)),
                ('user_can_access_all_tenant_accounts', models.BooleanField(default=False)),
                ('choice_payment_restrict_to_house_account', models.CharField(choices=[('User Enters Payment Account', 'User Enters Payment Account'), ('Pay With House Account Only', 'Pay With House Account Only')], default='Pay With House Account Only', max_length=32)),
                ('date_last_updated_choice_payment_restrict_to_house_account', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('choice_payment_require_payment_notation', models.CharField(choices=[('User Must Provide Note', 'User Must Provide Note'), ('No Notation Required', 'No Notation Required')], default='User Must Provide Note', max_length=32)),
                ('date_last_updated_choice_payment_require_notation', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical settings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, default='', max_length=48, null=True)),
                ('number', models.CharField(blank=True, default='', max_length=12, null=True)),
                ('room_type', models.CharField(blank=True, default='', max_length=28, null=True)),
                ('room_style', models.CharField(blank=True, default='', max_length=28, null=True)),
                ('capacity_seats', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('capacity_max', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('flag_catering_allowed', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['building__name', 'sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(default='', max_length=4848, verbose_name='Name')),
                ('note', models.CharField(blank=True, default='', max_length=64, verbose_name='Note')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('cxp_id', models.CharField(blank=True, max_length=12, verbose_name='CXP ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('description', models.TextField(blank=True, default='', max_length=255, verbose_name='Description')),
                ('variation', models.CharField(blank=True, default='', max_length=60, verbose_name='Variation')),
                ('price_descriptive', models.CharField(blank=True, default='', max_length=128, verbose_name='Descriptive Price')),
                ('price_numeric_fixed', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12)),
                ('price_numeric_per_person', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12)),
            ],
            options={
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='OrderAddOn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('repeat_linking_id', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('name', models.CharField(help_text='Name', max_length=32, verbose_name='Name')),
                ('note', models.CharField(blank=True, default='', help_text='Note', max_length=128, verbose_name='Note')),
                ('price_descriptive', models.CharField(blank=True, default='', help_text='Price Descriptive', max_length=128, verbose_name='Descriptive Price')),
                ('price_numeric', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Price Per Person', max_digits=12)),
                ('price_numeric_fixed', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Price Flat Fee', max_digits=12)),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date Created', verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, help_text='Date Last Updated', verbose_name='Updated')),
                ('flag_automatically_applied', models.BooleanField(default=False, help_text='Is Automatically Applied')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OrderBase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('invoice_number', models.CharField(default=apps.orders.models.increment_invoice_id, help_text='Invoice Number', max_length=10, unique=True)),
                ('cis_numbers', models.CharField(blank=True, default='', help_text='CIS Number(s)', max_length=64)),
                ('event_date', models.DateField(default=datetime.date(2010, 1, 1), help_text='Order Date')),
                ('order_contact', models.CharField(blank=True, default='', help_text='Order Contact', max_length=48)),
                ('order_contact_telephone', models.CharField(blank=True, default='', help_text='Order Contact Telephone', max_length=48)),
                ('nickname', models.CharField(blank=True, help_text='Order Description', max_length=96, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date Created', verbose_name='Created')),
                ('date_submitted', models.DateTimeField(help_text='Date Submitted', null=True, verbose_name='Submitted')),
                ('date_approved', models.DateTimeField(help_text='Date Approved', null=True, verbose_name='Approved')),
                ('date_last_updated', models.DateTimeField(auto_now=True, help_text='Date Last Updated', verbose_name='Updated')),
                ('flag_active', models.BooleanField(default=False, help_text='Is Active')),
                ('flag_custom', models.BooleanField(default=False, help_text='Is Custom Order')),
            ],
            options={
                'ordering': ['event_date'],
            },
        ),
        migrations.CreateModel(
            name='OrderCourse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('repeat_linking_id', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('flag_active', models.BooleanField(default=False, help_text='Is Active')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date Created', verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, help_text='Date Last Updated', verbose_name='Updated')),
            ],
            options={
                'ordering': ['course__sort_order'],
            },
        ),
        migrations.CreateModel(
            name='OrderCourseModification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('price_descriptive', models.CharField(blank=True, default='', max_length=128, verbose_name='Descriptive Price')),
                ('price_numeric_per_person', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12)),
            ],
            options={
                'ordering': ['menu_item__menu_item__name'],
            },
        ),
        migrations.CreateModel(
            name='OrderDeliveryWindow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('date', models.DateField()),
                ('window', models.TimeField()),
                ('flag_draft', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['date', 'window', 'building'],
            },
        ),
        migrations.CreateModel(
            name='OrderHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('comment', models.TextField(default='')),
                ('date_changed', models.DateTimeField(verbose_name='Changed on')),
                ('date_last_updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('flag_email_sent', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Order histories',
                'ordering': ['-date_changed'],
            },
        ),
        migrations.CreateModel(
            name='OrderLogistics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('repeat_linking_id', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('calendar_listing_id', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('event_delivery_window', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc), help_text='Delivery Window')),
                ('event_start', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc), help_text='Service Start')),
                ('event_breakdown', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc), help_text='Breakdown', null=True)),
                ('flag_breakdown_needed', models.BooleanField(default=True, help_text='Is Breakdown Needed')),
                ('floor', models.CharField(blank=True, default='', help_text='Floor', max_length=48)),
                ('room', models.CharField(blank=True, default='', help_text='Room', max_length=48)),
                ('guest_count', models.PositiveSmallIntegerField(default=0, help_text='Guest Count')),
                ('flag_active', models.BooleanField(default=False, help_text='Is Active')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date Created', verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, help_text='Date Last Updated', verbose_name='Updated')),
            ],
            options={
                'verbose_name_plural': 'Order logistics',
                'ordering': ['event_start'],
                'get_latest_by': ['-event_start'],
            },
        ),
        migrations.CreateModel(
            name='OrderMenuItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('repeat_linking_id', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('flag_active', models.BooleanField(default=False, help_text='Is Active')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date Created', verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, help_text='Date Last Updated', verbose_name='Updated')),
            ],
            options={
                'ordering': ['menu_item__sort_order'],
            },
        ),
        migrations.CreateModel(
            name='OrderNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('repeat_linking_id', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('note', models.TextField(blank=True, default='', help_text='Instructions')),
                ('flag_active', models.BooleanField(default=False, help_text='Is Active')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date Created', verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, help_text='Date Last Updated', verbose_name='Updated')),
            ],
            options={
                'ordering': ['logistics'],
            },
        ),
        migrations.CreateModel(
            name='OrderPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('repeat_linking_id', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('price_descriptive', models.CharField(blank=True, default='', max_length=128, verbose_name='Descriptive Price (total)')),
                ('price_descriptive_short', models.CharField(blank=True, default='', max_length=128, verbose_name='Descriptive Price (total), short')),
                ('price_numeric', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, verbose_name='Price (per person)')),
                ('price_numeric_fixed', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, verbose_name='Price (flat fee)')),
                ('price_over_limit_descriptive', models.CharField(blank=True, default='', max_length=96, verbose_name='Descriptive Price (per person) Over Selection Limit')),
                ('price_over_limit_numeric', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, verbose_name='Price (per person) Over Selection Limit')),
                ('price_under_minimum_fixed', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, verbose_name='Surcharge (flat fee) Under Guest Count Minimum')),
                ('price_under_minimum_numeric', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, verbose_name='Surcharge (per person) Under Guest Count Minimum')),
                ('lead_time', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('time_limit', models.DurationField(blank=True, default=datetime.timedelta(0), help_text='Time Limit')),
                ('selection_quantity', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Selection Quantity')),
                ('minimum_guest_count', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('flag_included', models.BooleanField(default=False, help_text='Is Included')),
                ('flag_override', models.BooleanField(default=False, help_text='Has Been Overridden')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date Created', verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, help_text='Date Last Updated', verbose_name='Updated')),
            ],
            options={
                'ordering': ['sort_order', 'package__name'],
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('flag_active', models.BooleanField(default=False, help_text='Is Active')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date Created', verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, help_text='Date Last Updated', verbose_name='Updated')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('status', models.CharField(choices=[('awaiting', 'Awaiting Approval'), ('pending', 'Pending'), ('confirmed', 'Confirmed'), ('changereq', 'Change Requested'), ('cancelled', 'Cancelled'), ('state0', 'State0 Start'), ('state1', 'State1 Where'), ('state2', 'State2 Time'), ('state3A', 'State3A Selection Packages'), ('state3B', 'State3B Selection Choices'), ('state4', 'State4 Details')], default='Pending', max_length=32, verbose_name='Status')),
                ('date_changed', models.DateTimeField(verbose_name='Changed on')),
                ('flag_cxp', models.BooleanField(default=False)),
                ('flag_calendar', models.BooleanField(default=False)),
                ('flag_rentals', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Order statuses',
                'ordering': ['-date_changed'],
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('cxp_id', models.CharField(blank=True, max_length=12, verbose_name='CXP ID')),
                ('name', models.CharField(max_length=64, verbose_name='Package')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('note', models.CharField(blank=True, default='', max_length=128, verbose_name='Note')),
                ('variation', models.CharField(blank=True, default='', max_length=60, verbose_name='Variation')),
                ('flag_attended', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='PackagePrice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('note', models.CharField(blank=True, default='', max_length=128, verbose_name='Note')),
                ('variation', models.CharField(blank=True, default='', max_length=60, verbose_name='Variation')),
                ('price_descriptive', models.CharField(blank=True, default='', max_length=128, verbose_name='Descriptive Price (total)')),
                ('price_descriptive_short', models.CharField(blank=True, default='', max_length=128, verbose_name='Descriptive Price (total), short')),
                ('price_numeric', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, verbose_name='Price (per person)')),
                ('price_numeric_fixed', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, verbose_name='Price (flat fee)')),
                ('price_over_limit_descriptive', models.CharField(blank=True, default='', max_length=128, verbose_name='Descriptive Price (per person) Over Selection Limit')),
                ('price_over_limit_numeric', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, verbose_name='Price (per person) Over Selection Limit')),
                ('price_under_minimum_fixed', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, verbose_name='Surcharge (flat fee) Under Guest Count Minimum')),
                ('price_under_minimum_numeric', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, verbose_name='Surcharge (per person) Under Guest Count Minimum')),
                ('lead_time', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Lead Time (hours)')),
                ('time_limit', models.DurationField(blank=True, default=datetime.timedelta(0), null=True)),
                ('selection_quantity', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('minimum_guest_count', models.PositiveSmallIntegerField(blank=True, default=0)),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('payment', models.CharField(blank=True, max_length=64)),
                ('nickname', models.CharField(blank=True, max_length=50)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_last_updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('flag_active', models.BooleanField(default=True)),
                ('flag_house_account', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['nickname', 'payment'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=32, verbose_name='Tag')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('sort_order', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('flag_active', models.BooleanField(default=True)),
                ('flag_tenant_workflow', models.BooleanField(default=False)),
                ('site_title', models.CharField(blank=True, default='Catering Services', max_length=32)),
                ('flag_sameday_ordering', models.BooleanField(default=False, help_text='Allowed to Order Same-Day?')),
                ('sameday_ordering_leadtime', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Same-Day Lead-time (hours)')),
                ('gp_contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('menu_pricing', models.CharField(choices=[('Default', 'Default'), ('Tenant-specific', 'Tenant-specific')], default='Default', max_length=16)),
                ('addon_staff_labor_captain_charge', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('addon_staff_labor_charge', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('addon_after_hours_scheduled_event_charge', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('addon_after_hours_event_breakdown_charge', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('addon_small_order_charge', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('lead_time_by_guest_count_threshold', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Guest Count to trigger lead time')),
                ('lead_time_by_guest_count_value', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Lead Time constraint (hours)')),
                ('minimum_guest_counts_descriptive', models.TextField(blank=True, null=True)),
                ('lead_times_descriptive', models.TextField(blank=True, null=True)),
                ('flag_defined_locations', models.BooleanField(default=False)),
                ('use_common_floors', models.BooleanField(default=True)),
                ('schedule_descriptive', models.CharField(blank=True, max_length=255, null=True)),
                ('allow_sunday', models.BooleanField(default=False)),
                ('allow_monday', models.BooleanField(default=True)),
                ('allow_tuesday', models.BooleanField(default=True)),
                ('allow_wednesday', models.BooleanField(default=True)),
                ('allow_thursday', models.BooleanField(default=True)),
                ('allow_friday', models.BooleanField(default=True)),
                ('allow_saturday', models.BooleanField(default=False)),
                ('allow_everyday', models.BooleanField(default=False)),
                ('timeline_start', models.TimeField(default=datetime.time(8, 0))),
                ('timeline_end', models.TimeField(default=datetime.time(17, 0))),
                ('is_building_required', models.BooleanField(default=False)),
                ('choice_location_deliver_to_reception', models.CharField(choices=[('User Directs Deliveries', 'User Directs Deliveries'), ('All Deliveries Redirected', 'All Deliveries Redirected')], default='User Directs Deliveries', max_length=32)),
                ('date_last_updated_choice_location_deliver_to_reception', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('value_location_deliver_to_reception', models.CharField(blank=True, default='', max_length=255)),
                ('date_last_updated_value_location_deliver_to_reception', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('choice_location_restrict_locations', models.CharField(choices=[('User Enters Destinations', 'User Enters Destinations'), ('Limited to Listed Destinations', 'Limited to Listed Destinations')], default='User Enters Destinations', max_length=32)),
                ('date_last_updated_choice_location_restrict_locations', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('value_location_restrict_locations', models.TextField(blank=True, null=True)),
                ('date_last_updated_value_location_restrict_locations', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('choice_user_signup_method', models.CharField(choices=[('Tenant Distributes Signup URL', 'Tenant Distributes Signup URL')], default="'Tenant Distributes Signup URL'", max_length=32)),
                ('date_last_updated_user_signup_method', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('choice_approve_direct_signup', models.CharField(choices=[('Tenant Must Approve', 'Tenant Must Approve'), ('Allow with Valid Email', 'Allow with Valid Email')], default='Tenant Must Approve', max_length=24, null=True)),
                ('date_last_updated_approve_direct_signup', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('value_user_email_validation', models.CharField(blank=True, default='', max_length=48, verbose_name='Email format')),
                ('date_last_updated_user_email_validation', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('tenant_has_house_account', models.BooleanField(default=True)),
                ('tenant_specific_billing_options', models.BooleanField(default=False)),
                ('user_can_access_all_tenant_accounts', models.BooleanField(default=False)),
                ('choice_payment_restrict_to_house_account', models.CharField(choices=[('User Enters Payment Account', 'User Enters Payment Account'), ('Pay With House Account Only', 'Pay With House Account Only')], default='Pay With House Account Only', max_length=32)),
                ('date_last_updated_choice_payment_restrict_to_house_account', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('choice_payment_require_payment_notation', models.CharField(choices=[('User Must Provide Note', 'User Must Provide Note'), ('No Notation Required', 'No Notation Required')], default='User Must Provide Note', max_length=32)),
                ('date_last_updated_choice_payment_require_notation', models.DateTimeField(default=datetime.datetime(2010, 1, 1, 0, 0, tzinfo=utc))),
                ('addons', models.ManyToManyField(blank=True, related_name='addons', to='orders.AddOn')),
                ('calendar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sitesettings', to='orders.calendar')),
                ('closed_days', models.ManyToManyField(blank=True, related_name='_orders_settings_closed_days_+', to='orders.ClosedDay')),
            ],
            options={
                'verbose_name_plural': 'Settings',
                'permissions': [('change_orders_settings', 'Can change Orders settings')],
            },
        ),
    ]
